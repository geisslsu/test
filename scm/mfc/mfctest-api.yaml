---
openapi: 3.0.3
info:
  title: mfctest-api
  description: Public API for mfctest-api
  version: "6"
components:
  schemas:
    TransportDto:
      description: "Representation of the data of a transport to be executed, in the\
        \ form of a DTO."
      required:
        - transportTaskId
        - destinations
        - transportUnit
      type: object
      properties:
        transportUnit:
          description: The transport unit that shall be moved with this transport.
          type: object
          allOf:
          - $ref: "#/components/schemas/TransportUnitDto"
    TransportUnitDto:
      description: This value object contains transport unit related data.
      required:
        - transportUnitTypeId
        - transportUnitId
      type: object
      properties:
        transportUnitTypeId:
          description: "The identifying value for a transport unit type, e.g. EP(Europallet)\
            \ or MP(Maxipallet)."
          type: string
          example: EP
        xExtensionLocal:
          description: "Dynamic dimension: TU extension along X-Axis of equipment\
            \ system, usually in mm."
          type: number
          allOf:
            - $ref: "types-api.yaml#/components/schemas/LengthSimpleType"
          example: 1200
          default: 123
        xExtension:
          description: "Dynamic dimension: TU extension along X-Axis of equipment\
            \ system, usually in mm."
          type: number
          allOf:
            - $ref: "types-api.yaml#/components/schemas/LengthSimpleType"
          example: 1200
          default: 123
        effectiveLhdXExtension:
          description: The effective x-extension of a transport unit is its extension
            in x-direction of a location under consideration of positional uncertainty
            due to previous handling by a flexible LHD which has not been closed to
            the transport unit xExtension.
          type: number
          allOf:
          - $ref: "types-api.yaml#/components/schemas/LengthSimpleType"
        allocationX:
          format: int32
          description: Allocation X specifies how many storage positions a transport
            unit occupies in x direction within a location layout.
          type: integer
          example: 41
        allocationZ:
          format: int32
          description: Allocation Z specifies how many storage positions a transport
            unit occupies in z direction within a location layout.
          type: integer
          example: 3
        yExtension:
          description: "Dynamic dimension: TU extension along Y-Axis of equipment\
            \ system, usually in mm."
          type: number
          allOf:
          - $ref: "types-api.yaml#/components/schemas/LengthSimpleType"
          example: 1800
          default: 567
        zExtension:
          description: "Dynamic dimension: TU extension along Z-Axis of equipment\
            \ system, usually in mm."
          type: number
          allOf:
          - $ref: 'types-api.yaml#/components/schemas/LengthSimpleType'
          example: 800
        weight:
          description: "The overall weight of a transport unit in g (grams), includes\
            \ tare weight of the base transport unit and of the good."
          type: number
          allOf:
          - $ref: 'types-api.yaml#/components/schemas/WeightSimpleType'
          example: 600000
        arrivalDate:
          format: date-time
          description: The timestamp for the last arrival time for a transport segment.
          type: string
          example: 2021-09-09 12:00:00.000
        contourInfo:
          description: The detailed contour info.
          type: string
          example: '..............'
        transportUnitOrientation:
          description: The direction in which the front of the transport unit is facing.
          type: string
          example: NORTH
