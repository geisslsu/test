---
openapi: 3.0.3
info:
  title: mfc-api
  description: Public API for mfc-api
  version: "6"
paths:
  /mfc/announcements/transport-units:
    get:
      tags:
        - announced-transport-unit
      operationId: get-announced-transport-units
      summary: Finds all announced transport units
      description: Returns a DTO for all announced transport units
      responses:
        "200":
          description: Returns ok with result content on success.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AnnouncedTransportUnitDto"
    post:
      tags:
        - announced-transport-unit
      operationId: create-announced-transport-unit
      summary: Creates announcement from given DTO
      description: Creates a transport unit announcement from the Dto. This operation
        is asynchronous and may not be complete when call returns. Due to asynchronous
        nature there is also no error returned if operation fails to complete.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnnouncedTransportUnitDto"
      responses:
        "201":
          description: Created
    delete:
      tags:
        - announced-transport-unit
      operationId: delete-announced-transport-unit
      summary: Removes/Cancels TransportUnit Announcement
      description: Removes transport unit announcement if it existsThis Operation
        is asynchronous and may not be complete when operation returns. Due to asynchronous
        nature there is also no error returned if operation fails to find an announcement
        for given transportUnitId.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelAnnouncedTransportUnitDto"
      responses:
        "204":
          description: No Content
  /mfc/announcements/transport-units/{transport-unit-id}:
    get:
      tags:
        - announced-transport-unit
      operationId: get-announced-transport-unit
      summary: Finds requested announced transport unit
      parameters:
        - name: transport-unit-id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "If successfully found, returns the announcement dto associated\
            \ with TransportUnitId."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnnouncedTransportUnitDto"
        "404":
          description: Returns 404 if transport unit announcement is not found.
  /mfc/test/equipment/status-request:
    put:
      tags:
        - equipment
      operationId: request-equipment-status
      summary: Request the equipment status of a location.
      description: Request the equipment status of a (storage) location.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestEquipmentStatusCommand"
      responses:
        "204":
          description: No Content
  /mfc/test/transports:
    get:
      tags:
        - transport
      operationId: get-transports
      summary: Finds all transports for the requested process status
      description: This method can be used to fetch the status of multiple transports.
        The query parameters are used to filter the amount of transports.
      parameters:
        - name: process_status
          in: query
          schema:
            type: string
        - name: transport_unit_id
          in: query
          schema:
            type: string
        - name: transport_task_id
          in: query
          schema:
            type: string
      responses:
        "200":
          description: a list with all transports for the requested process status
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TransportDetailDto"
  /mfc/test/transports/{transport-unit-id}:
    get:
      tags:
        - transport
      operationId: get-transport
      summary: Find a transport by id
      description: This method can be used to fetch a transport by the id. It is not
        possible to filter by e.g. process status.
      parameters:
        - name: transport-unit-id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: the transport matching the id or null
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransportDetailDto"
  /mfc/transport-units:
    get:
      tags:
        - transport-unit
      operationId: get-transport-units
      summary: Finds all transport units
      description: "This method can be used to fetch all transport units. Deprecated,\
        \ use /filter instead"
      parameters:
        - name: locationId
          in: query
          schema:
            $ref: "#/components/schemas/LocationId"
        - name: skipOrdersWithTransport
          in: query
          schema:
            type: boolean
      responses:
        "200":
          description: a list with all transport units
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TransportUnitDto"
      deprecated: true
  /mfc/transport-units/filter:
    get:
      tags:
        - transport-unit
      operationId: filter-transport-units
      summary: Finds all transport units
      description: This method can be used to fetch all transport units.
      parameters:
        - name: locationId
          in: query
          schema:
            type: string
        - name: skipOrdersWithTransport
          in: query
          schema:
            type: boolean
      responses:
        "200":
          description: a list with all transport units
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TransportUnitDto"
  /mfc/transport-units/{transport-unit-id}:
    get:
      tags:
        - transport-unit
      operationId: get-transport-unit
      summary: Find a transport unit by id
      description: This method can be used to fetch a transport unit by id.
      parameters:
        - name: transport-unit-id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: the transport unit matching the id or null
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransportUnitDto"
    delete:
      tags:
        - transport-unit
      operationId: remove-transport-units
      summary: Remove a transport unit
      description: Remove a transport unit and all related data
      parameters:
        - name: transport-unit-id
          in: path
          required: true
          schema:
            type: string
        - name: confirmationChannel
          in: query
          schema:
            type: string
      responses:
        "200":
          description: OK
  /mfc/transportexecutor/cancellation-request:
    put:
      tags:
        - transport-executor
      operationId: request-cancellation
      summary: Request the cancellation of a transport which has already been submitted.
      description: Request the cancellation of a (shuffle) transport which has already
        been submitted.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestCancellationCommand"
      responses:
        "204":
          description: No Content
  /mfc/transportexecutor/shuffles:
    post:
      tags:
        - transport-executor
      operationId: add-shuffles
      summary: Requests the execution of multiple shuffle transports.
      description: Requests the execution of multiple shuffle transports. All members
        of the transport list will be confirmed individually via the TransportInitiator
        interface.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddShufflesCommand"
      responses:
        "201":
          description: Created
  /mfc/transportexecutor/transports:
    put:
      tags:
        - transport-executor
      operationId: change-transports
      summary: Change multiple transports which has already been submitted.
      description: Change multiple transports which has already been submitted where
        the newly submitted data override the previous ones.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeTransportsCommand"
      responses:
        "204":
          description: No Content
    post:
      tags:
        - transport-executor
      operationId: add-transports
      summary: Requests the execution of multiple of transports.
      description: All members of the transport list will be confirmed individually
        via the TransportInitiator interface. This method is typically in the context
        of sequencing. In this case the MFC should see the whole group of transports
        at once.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddTransportsCommand"
      responses:
        "201":
          description: Created
  /mfc/transportexecutor/transports/{transport-unit-id}/arrive-at-locations/{location-id}:
    put:
      tags:
        - transport-executor
      operationId: arrive-at-location
      summary: Trigger fault recovery function 'arrive at location'
      description: Trigger fault recovery function 'arrive at location' for an existing
        transport that is identified by the corresponding transport unit ID and let
        it arrive at the provided location be simulating the arrival message that
        would be sent by the PLC.
      parameters:
        - name: transport-unit-id
          in: path
          required: true
          schema:
            type: string
        - name: location-id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
components:
  schemas:
    AddShufflesCommand:
      description: Requests the execution of multiple shuffle transports. All members
        of the transports list will be confirmed individually via the TransportInitiator
        interface.
      x-horizon-topic-name: "${subsystem.bid}.mfc.main.cmd"
      required:
        - shuffles
      type: object
      properties:
        shuffles:
          description: Shuffle transports for multiple reference transports
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/AddShufflesDto"
        confirmationChannel:
          description: Channel provided by an external SCM.
          type: string
          example: tas.transporttask.cmd
    AddShufflesDto:
      description: Represents the shuffle transports realated to a reference transport.
      type: object
      properties:
        transportUnitId:
          description: The identifying value for the transport unit of the reference
            transport task.
          type: object
          allOf:
          - $ref: "#/components/schemas/TransportUnitId"
        transportTaskId:
          description: The reference transport task before which all shuffle transports
            must be executed.
          type: object
          allOf:
          - $ref: "#/components/schemas/TransportTaskId"
        transports:
          description: List shuffle transports which must be executed before the reference
            transport can be executed.
          type: array
          items:
            $ref: "#/components/schemas/TransportDto"
    AddTransportsCommand:
      description: Command to request the execution of one to n transports.
      x-horizon-topic-name: "${subsystem.bid}.mfc.main.cmd"
      required:
        - transports
      type: object
      properties:
        transports:
          description: The list of transports which shall be executed.
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/TransportDto"
        confirmationChannel:
          description: "The messaging channel all responses related to the transports\
            \ being added w/ this command shall be sent to, provided by an external\
            \ SCM."
          type: string
          example: tas.transporttask.confirm.cmd
    AnnounceSubsystemExitDurableEvent:
      description: Durable event to announce an imminent arrival of an handling unit
        at a handover location. This event is to be used by the recipient to preload
        the edge device with handling unit routing information so that the edge device
        can respond to PLC quickly when the handling unit arrives at the handover
        location.
      x-horizon-topic-name: "${subsystem.bid}.mfc.subsystemexit.devt"
      required:
        - locationId
        - transportUnitId
      type: object
      properties:
        locationId:
          description: Location ID of the handover location where the transport unit
            is expected to arrive shortly.
          type: string
          allOf:
          - $ref: "#/components/schemas/LocationId"
        transportUnitId:
          description: Transport Unit ID of the handling unit that is expected to
            arrive at the handover location shortly.
          type: string
          allOf:
          - $ref: "#/components/schemas/TransportUnitId"
    AnnouncedTransportUnitDto:
      description: An announced transport unit is a planned transport of a transport
        unit in the near future.
      type: object
      properties:
        transportUnitId:
          description: The identifying value for the transport unit which is announced.
          type: string
          allOf:
          - $ref: "#/components/schemas/TransportUnitId"
        transportUnitType:
          description: The identifying value for a transport unit type.
          type: string
          example: EP
        destinationLocationId:
          description: Destination location identifier
          type: string
          allOf:
          - $ref: "#/components/schemas/LocationId"
        ownerBid:
          description: Owner (inventory-owner) to whom this advice refers to.
          type: string
          example: CL001
        adviceBidPart:
          description: The ID of the advice which is going to be processed.
          type: string
          example: ADV001
        adviceLineBidPart:
          description: The ID of the advice line which is going to be processed.
          type: string
          example: ADV001-001
        adviceLineTransportUnitId:
          description: The ID of the advice line transport unit id.processed.
          type: string
          example: 1#ADV001#ADV001#LU001
        quantityTarget:
          description: The total quantity of inventory to be received in the advice
            line transport unit.
          type: number
          allOf:
          - $ref: "../../lib/types/types-api.yaml#/components/schemas/QuantitySimpleType"
          example: 100
        expectedWeight:
          description: The total weight of the whole transport unit or transport unit
            stack. * An undefined expected weight means that no weight check is necessary.
          type: number
          allOf:
          - $ref: "../../lib/types/types-api.yaml#/components/schemas/WeightSimpleType"
          example: 10
        lowerToleranceWeight:
          description: "The factor (in percentage) that lower weight of transport\
            \ unit is allowed. Zero or null means no underflow is allowed. * Example:\
            \ if the weight is 100, and the lower tolerance is set to 5%, then a minimum\
            \ weight of 95  is allowed."
          type: number
          allOf:
          - $ref: "../../lib/types/types-api.yaml#/components/schemas/WeightSimpleType"
          example: 5
        upperToleranceWeight:
          description: "he factor (in percentage) that upper weight of transport unit\
            \ is allowed. Zero or null means no overflow is allowed. * Example: if\
            \ the weight is 100, and the upper tolerance is set to 8%, then a maximum\
            \ weight of 108  is allowed."
          type: number
          allOf:
          - $ref: "../../lib/types/types-api.yaml#/components/schemas/WeightSimpleType"
          example: 8
        height:
          description: The height of the whole transport unit or transport unit stack.
          type: number
          allOf:
          - $ref: "../../lib/types/types-api.yaml#/components/schemas/LengthSimpleType"
          example: 100
        lowerToleranceHeight:
          description: "The factor (in percentage) that lower height of transport\
            \ unit is allowed. Zero or null means no underflow is allowed * Example:\
            \ if the height is 100, and the lower tolerance is set to 5%, then a minimum\
            \ height of 95  is allowed."
          type: number
          allOf:
          - $ref: "../../lib/types/types-api.yaml#/components/schemas/LengthSimpleType"
          example: 5
        upperToleranceHeight:
          description: "The factor (in percentage) that upper height of transport\
            \ unit is allowed. Zero or null means no overflow is allowed. * Example:\
            \ if the height is 100, and the upper tolerance is set to 8%, then a maximum\
            \ height of 108  is allowed."
          type: number
          allOf:
          - $ref: "../../lib/types/types-api.yaml#/components/schemas/LengthSimpleType"
          example: 8
        status:
          description: transport Announcement Unit status.
          type: string
          example: CREATED
    CancelAnnouncedTransportUnitDto:
      description: A canceled object handle canceled announced transport unit.
      type: object
      properties:
        transportUnitId:
          description: The identifying value for the transport unit which is announced.
          type: string
          allOf:
          - $ref: "#/components/schemas/TransportUnitId"
        transportUnitType:
          description: The identifying value for a transport unit type.
          type: string
          example: EP
        originatorBid:
          description: Inventory originator to whom this advice refers to.
          type: string
          example: CL001
          deprecated: true
        ownerBid:
          description: Inventory owner to whom this advice refers to.
          type: string
          example: CL001
        adviceBidPart:
          description: The ID of the advice which is going to be processed.
          type: string
          example: ADV001
        adviceLineBidPart:
          description: The ID of the advice line which is going to be processed.
          type: string
          example: ADV001-001
        adviceLineTransportUnitId:
          description: The ID of the advice line transport unit id.processed.
          type: string
          example: 1#ADV001#ADV001#LU001
    CancelResult:
      enum:
        - OK
        - FAIL
        - FAIL_REDIRECT
        - FAIL_TO_NOT_FOUNT
      type: string
      x-horizon-domainvalue: true
    CancellationConfirmation:
      description: The confirmation for a cancellation
      type: object
      properties:
        cancellationConfirmations:
          type: array
          items:
            $ref: "#/components/schemas/CancellationConfirmationDto"
    CancellationConfirmationDto:
      description: The confirmation for a cancellation
      type: object
      properties:
        transportTaskId:
          description: The ID of the transport task whose cancellation is confirmed.
          type: string
          allOf:
          - $ref: "#/components/schemas/TransportTaskId"
        transportUnitId:
          description: The identifying value for the transport unit whose transport
            cancellation is confirmed.
          type: string
          allOf:
          - $ref: "#/components/schemas/TransportUnitId"
        cancelResult:
          $ref: "#/components/schemas/CancelResult"
    ChangeTransportsCommand:
      description: Change multiple transports which have already been submitted. The
        newly submitted data override the previous ones.
      x-horizon-topic-name: "${subsystem.bid}.mfc.main.cmd"
      required:
        - transports
      type: object
      properties:
        transports:
          description: List of transports to change.
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/TransportDto"
    ConfirmationStatus:
      enum:
        - TO_CONF_DEST
        - TO_CONF_SRC
        - TO_CONF_MICRO
      type: string
      x-horizon-domainvalue: true
    DetailedLocationDto:
      description: The location is the smallest distinguishable unit for the storage
        of transport units. The DetailedLocationId contains additional information's
        about a position and a slot.
      type: object
      properties:
        locationId:
          description: The identifying value for a location.
          type: string
          allOf:
          - $ref: "#/components/schemas/LocationId"
          example: BHB.UL50.51.0.UL51100201
        slotId:
          description: Slot number
          type: string
          example: "001"
        position:
          format: int32
          description: "Position in the location, e.g. 1 may be front or bottom, 2\
            \ may be back or top, check your warehouse definitions for a more specific\
            \ description."
          type: integer
          example: 1
    EquipmentStatusDto:
      description: Payload for a location status changed dto event.
      type: object
      properties:
        locationId:
          $ref: "#/components/schemas/LocationId"
        available:
          description: The identifying value for whether a location is available or
            not.
          default: <null>|not set|not part of the JSON payload
          type: boolean
          example: "TRUE"
        reason:
          description: Provides an optional explanation why the status changed to
            not available. This is for information only. No business decisions shall
            be based on this value.
          type: string
          example: MFC (PLC) Status Change
        remainingSpace:
          format: int32
          description: "The remaining space in [mm] in the slot/bin in z-direction\
            \ from aisle"
          type: integer
          example: 1000
        transportUnitQuantity:
          format: int32
          description: The amount of transport units occupying the location.
          type: integer
          example: 5
        delayedSince:
          format: date-time
          description: The timestamp since the transport unit is delayed.
          type: string
          example: 2021-09-09 12:00:00.000
        delayedTransportUnitId:
          description: The most delayed transport unit.
          type: string
          allOf:
          - $ref: "#/components/schemas/TransportUnitId"
          example: TU0001
        transportUnits:
          description: The concrete transport units occupying the location.
          type: array
          items:
            $ref: "#/components/schemas/TransportUnitDto"
    ErrorCode:
      enum:
        - OK
        - MANUAL_OPERATION
        - PLACE_OCC
        - PLACE_FREE
        - SOURCE_PLACE_NOT_REACHABLE
        - DEST_PLACE_NOT_REACHABLE
        - ABORT_DELETED
        - CANCEL_NOT_ACCEPTED
        - DROPSTATION_OCCUPIED
        - DEST_NOT_REACHABLE
        - FORK_OCC
        - FALSE_NUMBER
        - LOAD_TOO_HIGH
        - LOAD_TOO_WIDE
        - LOAD_TOO_HEAVY
        - CONTOUR
        - NOREAD
        - MAX_LOOP
        - WRONG_DEST
        - UNKNOWN_TRANSPORTUNIT
        - LEVEL_OCCUPIED
        - SEQUENCE_ERROR
        - GENERAL_ERROR
        - CANCEL_REDIRECT
        - SHUTTLE_BROKEN
        - UNKNOWN_SKU
        - WRONG_SKU
        - MISSING_QUANTITY
      type: string
      x-horizon-domainvalue: true
    FillLevelEvent:
      description: The fill level event is sent by the MFC triggered by the DCI STFI
        message.
      x-horizon-topic-name: "${subsystem.bid}.mfc.filllevel.evt"
      type: object
      properties:
        locationId:
          description: The location ID for the filling degree.
          type: string
          allOf:
          - $ref: "#/components/schemas/LocationId"
        currentFillLevel:
          format: int64
          description: "Count of TransportUnits, might be estimated on light sensor\
            \ measurements."
          type: integer
        maxFillLevel:
          format: int64
          description: Max count of TransportUnits.
          type: integer
    InterimDestinationConfirmation:
      description: Holds interim destinations of transport units. All members of the
        transports list will be confirmed individually via the Transport Executor
        interface.
      type: object
      properties:
        interimDestinationConfirmations:
          description: List of transports whose cancellation is requested.
          type: array
          items:
            $ref: "#/components/schemas/InterimDestinationConfirmationDto"
    InterimDestinationConfirmationDto:
      description: Represents a transport for execution.
      type: object
      properties:
        transportUnitDto:
          description: The identifying value for the transport unit dto which is announced.
          type: object
          allOf:
          - $ref: "#/components/schemas/TransportUnitDto"
        transportTaskId:
          description: The reference transport task for the transport unit.
          type: string
          allOf:
          - $ref: "#/components/schemas/TransportTaskId"
        storageDto:
          description: Additional data if the transport unit was dropped at a storage
            location.
          type: object
          allOf:
            - $ref: "#/components/schemas/StorageDto"
    LightOffDurableEvent:
      description: 'Durable event to alert that a button has been pressed by a Banner button.  '
      x-horizon-topic-name: "${subsystem.bid}.mfc.lightoff.devt"
      required:
        - locationId
        - position
      type: object
      properties:
        triggerTime:
          format: date-time
          description: Can be used to measure e.g. the duration between turning off
            the lights and the actual update of a UI screen.
          type: string
          example: 2021-09-09 12:00:00.000
        locationId:
          description: The full qualified logical location of the button (identical
            with the location of the conveyor it is attached to).
          type: string
        position:
          format: int64
          description: Position of the button within the context of the location.
          type: integer
    LocationDepartureDto:
      description: Attributes related to transport unit leaving this source location.
      required:
        - leftLocation
        - transportUnitLocation
      type: object
      properties:
        leftLocation:
          description: Source location leaving from.
          type: object
          allOf:
          - $ref: "#/components/schemas/DetailedLocationDto"
        transportUnitLocation:
          description: The transport unit that left the location.
          type: object
          allOf:
          - $ref: "#/components/schemas/TransportUnitLocationDto"
    LocationDeparturesConfirmation:
      description: Send confirmation to TAS when transport unit is leaving the location.
      type: object
      properties:
        locationDepartures:
          description: List of transport units leaving their locations or stations.
          type: array
          items:
            $ref: "#/components/schemas/LocationDepartureDto"
    LocationId:
      description: The identifying value for a location.
      type: string
      example: BHB.UL50.51.0.UL51100201
      x-horizon-simpletype: true
    ReasonCode:
      enum:
        - BIN_FULL
        - DESTINATION_NOT_REACHABLE
        - SHUFFLE
        - MISSION_NOT_POSSIBLE
        - BIN_EMPTY_INJECTION
        - LEVEL_BLOCKED
        - LOAD_TOO_HIGH
        - LOAD_TOO_WIDE
        - LOAD_TOO_HEAVY
        - BARCODE_SCANNED
        - NOT_AVAILABLE
        - MORE_QUANTITY
        - U_TURN
        - DOWNSTREAM_AISLE
        - UFO
        - SLOT_BLOCKED
        - SHUTTLE_BROKEN
        - AUTOSTORE_REQUEST
        - EXTENSION_UPDATE
        - NO_LONGER_EXISTS
        - ADD_INTERMEDIATE_DESTINATION
        - STACKED
        - DESTACK
        - DESTACKED
        - WEIGHT_CHECK
      type: string
      x-horizon-domainvalue: true
    RemoveTransportUnitCommand:
      description: Remove a transport unit
      x-horizon-topic-name: "${subsystem.bid}.mfc.main.cmd"
      type: object
      properties:
        transportUnitId:
          $ref: "#/components/schemas/TransportUnitId"
        confirmationChannel:
          type: string
    RemoveTransportUnitConfirmation:
      description: "Confirmation, that the transport unit was successfully removed"
      type: object
      properties:
        transportUnitId:
          $ref: "#/components/schemas/TransportUnitId"
        removalResult:
          $ref: "#/components/schemas/RemoveTransportUnitResult"
    RemoveTransportUnitResult:
      enum:
        - OK
        - FAIL
      type: string
      x-horizon-domainvalue: true
    RequestCancellationCommand:
      description: Request the cancellation of a (shuffle) transport which has already
        been submitted.
      x-horizon-topic-name: "${subsystem.bid}.mfc.main.cmd"
      type: object
      properties:
        confirmationChannel:
          description: The messaging channel request cancellation confirmations are
            sent to.
          type: string
          example: tas.requestcancellation.cnf
        cancellationRequests:
          description: List of transports whose cancellation is requested.
          type: array
          items:
            $ref: "#/components/schemas/RequestCancellationDto"
    RequestCancellationDto:
      description: Cancellation request for one transport.
      required:
        - transportTaskId
      type: object
      properties:
        transportUnitId:
          description: The identifying value for a transport unit for which to cancel
            the transport.
          type: string
          allOf:
          - $ref: "#/components/schemas/TransportUnitId"
          nullable: true
        transportTaskId:
          description: The transport task for which to cancel the transport.
          type: string
          allOf:
          - $ref: "#/components/schemas/TransportTaskId"
          example: 1
        redirectTransports:
          description: "Specifies whether a redirection of the transport is allowed,\
            \ when the transport unit is no longer at it's source location."
          type: boolean
    RequestEquipmentStatusCommand:
      description: Get additional information from the equipment identified by a location ID
      x-horizon-topic-name: "${subsystem.bid}.mfc.main.cmd"
      required:
        - locations
      type: object
      properties:
        locations:
          description: List of locations additional data is expected.
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/LocationId"
        confirmationChannel:
          description: "The messaging channel all responses related to the status\
            \ request being added w/ this command shall be sent to, provided by an\
            \ external SCM."
          type: string
          example: tas.statustask.confirm.cmd
    StorageDto:
      description: Additional data for storage equipment.
      type: object
      properties:
        transportUnitQuantity:
          format: int32
          description: Provides the amount of transport units located at a storage
            location.
          type: integer
        remainingSpace:
          format: int32
          description: "Defines the space in [mm] from start of location to the edge\
            \ of the first transport unit in the storage location. The viewpoint is\
            \ the shuttle lane."
          type: integer
    TransportConfirmationDto:
      description: Attributes of a transport which is being confirmed.
      type: object
      properties:
        transportTaskId:
          description: The id of the transport task which cancellation is confirmed.
          type: string
          allOf:
          - $ref: "#/components/schemas/TransportTaskId"
        transportUnit:
          description: The transport unit that shall be moved with this transport.
          type: object
          allOf:
          - $ref: "#/components/schemas/TransportUnitDto"
        storageDto:
          description: Additional data if the transport unit was dropped at a storage
            location.
          type: object
          allOf:
          - $ref: "#/components/schemas/StorageDto"
        confirmationStatus:
          $ref: "#/components/schemas/ConfirmationStatus"
        errorCode:
          $ref: "#/components/schemas/ErrorCode"
        reasonCode:
          $ref: "#/components/schemas/ReasonCode"
        reason:
          type: string
        startTime:
          format: date-time
          type: string
          example: 2022-03-10T16:15:50Z
        finishTime:
          format: date-time
          type: string
          example: 2022-03-10T16:15:50Z
    TransportDestinationDto:
      description: Represents a destination of a transport.
      required:
        - destination
      type: object
      properties:
        destination:
          description: The actual destination.
          type: object
          allOf:
          - $ref: "#/components/schemas/DetailedLocationDto"
        destinationSequence:
          format: int64
          description: The position in which the destination should be visited in
            relation to other destinations that may exist for the accompanying transport
            unit.
          type: integer
          example: 1
        requiresNotifyUponArrival:
          description: Is a message required upon arrival? E.g. set this flag to TRUE
            to send an InterimDestinationConfirmation upon reaching a intermediate
            destination.
          default: "TRUE"
          type: boolean
          example: "TRUE"
        requiresNotifyUponDeparture:
          description: Is a message required upon departure?
          default: "TRUE"
          type: boolean
          example: false
        status:
          description: The status in which the destination is in.
          type: string
          example: CREATED
        transportGroup:
          description: Groups of transports which belongs together e.g. transports
            of a pick group.
          type: string
          example: A
        transportGroupSequence:
          format: int64
          description: Sequence between groups e.g. the transports of group 'A' shall
            be handled before transports of group 'B'
          type: integer
          example: 1
        transportGroupInternalSequence:
          format: int64
          description: Sequence of transports inside a group e.g. if we have a strict
            sequence between transports inside a group.
          type: integer
          example: 1
        refinementReason:
          description: "The reason a transport destination needs to be refined, non\
            \ null value could be that this destination needs no refinement, like\
            \ in the example or something like the BIN may be the reason and in that\
            \ case that would be the value entered, etc."
          type: string
          example: NO_REFINEMENT
        lhdXExtension:
          description: "This parameter defines the flex axis extension which an LHD\
            \ like a flex shuttle or a typhoon can use at the destination location\
            \ to without any obstacles, e.g. fully extend the telescopes and use any\
            \ fingers for transport unit handling."
          type: number
          allOf:
          - $ref: "../../lib/types/types-api.yaml#/components/schemas/LengthSimpleType"
          example: 435
        allocationInXDirection:
          format: int32
          description: The value of how many positions are occupied of the layout
            in x-direction by this transport at the destination location.
          type: integer
          example: 1
        transportQualifier:
          description: A qualifier that tells which assignments are potential refinement
            candidates for a particular transport.
          type: string
          example: String
        requiresConfirmByInitiator:
          description: "If set, the transport will wait for external confirmation\
            \ at this destination"
          type: boolean
          example: true
    TransportDetailDto:
      description: This value object contains transport related data.
      type: object
      properties:
        transportTaskId:
          description: Used as unique identifier of a transport request.
          type: string
          allOf:
          - $ref: "#/components/schemas/TransportTaskId"
          example: 1
        transportUnit:
          $ref: "#/components/schemas/TransportUnitDto"
        destinations:
          type: array
          items:
            $ref: "#/components/schemas/TransportDestinationDto"
        received:
          format: date-time
          type: string
          example: 2022-03-10T16:15:50Z
        started:
          format: date-time
          type: string
          example: 2022-03-10T16:15:50Z
        partialDestination:
          $ref: "#/components/schemas/DetailedLocationDto"
        sourceLocation:
          $ref: "#/components/schemas/DetailedLocationDto"
        errorCode:
          description: Information about whether an error has occurred for the transport.
            See the ErrorCode documentation for further examples.
          type: string
          example: OK
        processStatus:
          description: Which status the transport is in.
          type: string
          example: ACTIVE
    TransportDto:
      description: "Representation of the data of a transport to be executed, in the\
        \ form of a DTO."
      required:
        - transportTaskId
        - destinations
        - transportUnit
      type: object
      properties:
        transportTaskId:
          description: The unique ID that identifies this transport in the external
            SCM. All updates or confirmations for this transport need to encompass
            this ID.
          type: string
          allOf:
          - $ref: "#/components/schemas/TransportTaskId"
          example: UUID
        urgency:
          format: int64
          description: The urgency defines the sequence in which the system attempts
            to process the transport. The urgency value is calculated by the system
            and this calculation includes all of the factors that influence the sequence
            in which the transports are to be processed.
          default: 4000000000000
          type: integer
          example: 4000000000000
          nullable: true
        destinations:
          description: Per transport a list of destinations is provided.
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/TransportDestinationDto"
        transportUnit:
          description: The transport unit that shall be moved with this transport.
          type: object
          allOf:
          - $ref: "#/components/schemas/TransportUnitDto"
        requiresNotifyUponSourceDeparture:
          description: Set to true if the external SCM needs to be notified when the
            transport unit has left the global source location. This can be used to
            book a bin free or update the UI of a workstation.
          default: "TRUE"
          type: boolean
        sourceLhdXExtension:
          description: "This parameter defines the flex axis extension which an LHD\
            \ like a flex shuttle or a typhoon can use at the source location to without\
            \ any obstacles, e.g. fully extend the telescopes and use any fingers\
            \ for transport unit handling."
          type: number
          allOf:
          - $ref: "../../lib/types/types-api.yaml#/components/schemas/LengthSimpleType"
          example: 432
        sourceAllocationInXDirection:
          format: int32
          description: The value of how many positions are occupied of the layout
            in x-direction by this transport at the source location.
          type: integer
          example: 1
        additionalData:
          type: object
          additionalProperties: {}
        transportReason:
          description: DMS movement reason
          type: string
          example: FULFILLMENT_HU
    TransportTaskId:
      description: Simple identification for transport task.
      type: string
      example: "1"
      x-horizon-simpletype: true
    TransportUnitChildDto:
      description: This value object contains transport unit related data.
      required:
        - transportUnitTypeId
      type: object
      properties:
        transportUnitTypeId:
          description: "The identifying value for a transport unit type, e.g. EP(Europallet)\
            \ or MP(Maxipallet)."
          type: string
          example: EP
        location:
          description: Current resp. last known location of the transport unit.
          type: object
          allOf:
            - $ref: "#/components/schemas/DetailedLocationDto"
          example: BHB.TA50.0.0.PCRE50IS01
        transportUnitId:
          description: The identifying value for a transport unit.
          type: string
          allOf:
            - $ref: "#/components/schemas/TransportUnitId"
          example: LU001
        xExtension:
          description: "Dynamic dimension: TU extension along X-Axis of equipment\
            \ system, usually in mm."
          type: number
          allOf:
            - $ref: "../../lib/types/types-api.yaml#/components/schemas/LengthSimpleType"
          example: 1200
        effectiveLhdXExtension:
          description: The effective x-extension of a transport unit is its extension
            in x-direction of a location under consideration of positional uncertainty
            due to previous handling by a flexible LHD which has not been closed to
            the transport unit xExtension.
          type: number
          allOf:
            - $ref: "../../lib/types/types-api.yaml#/components/schemas/LengthSimpleType"
        allocationX:
          format: int32
          description: Allocation X specifies how many storage positions a transport
            unit occupies in x direction within a location layout.
          type: integer
          example: 41
        allocationZ:
          format: int32
          description: Allocation Z specifies how many storage positions a transport
            unit occupies in z direction within a location layout.
          type: integer
          example: 3
        yExtension:
          description: "Dynamic dimension: TU extension along Y-Axis of equipment\
            \ system, usually in mm."
          type: number
          allOf:
            - $ref: "../../lib/types/types-api.yaml#/components/schemas/LengthSimpleType"
          example: 1800
        zExtension:
          description: "Dynamic dimension: TU extension along Z-Axis of equipment\
            \ system, usually in mm."
          type: number
          allOf:
            - $ref: "../../lib/types/types-api.yaml#/components/schemas/LengthSimpleType"
          example: 800
        weight:
          description: "The overall weight of a transport unit in g (grams), includes\
            \ tare weight of the base transport unit and of the good."
          type: number
          allOf:
            - $ref: "../../lib/types/types-api.yaml#/components/schemas/WeightSimpleType"
          example: 600000
        arrivalDate:
          format: date-time
          description: The timestamp for the last arrival time for a transport segment.
          type: string
          example: 2021-09-09 12:00:00.000
        contourInfo:
          description: The detailed contour info.
          type: string
          example: '..............'
        transportUnitOrientation:
          description: The direction in which the front of the transport unit is facing.
          type: string
          example: NORTH
    TransportUnitDto:
      description: This value object contains transport unit related data.
      required:
        - transportUnitTypeId
        - transportUnitId
      type: object
      properties:
        transportUnitTypeId:
          description: "The identifying value for a transport unit type, e.g. EP(Europallet)\
            \ or MP(Maxipallet)."
          type: string
          example: EP
        location:
          description: Current resp. last known location of the transport unit.
          type: object
          allOf:
          - $ref: "#/components/schemas/DetailedLocationDto"
          example: BHB.TA50.0.0.PCRE50IS01
        transportUnitId:
          description: The identifying value for a transport unit.
          allOf:
          - $ref: "#/components/schemas/TransportUnitId"
          example: LU001
        xExtension:
          description: "Dynamic dimension: TU extension along X-Axis of equipment\
            \ system, usually in mm."
          type: number
          $ref: "../../lib/types/types-api.yaml#/components/schemas/LengthSimpleType"
          example: 1300
        effectiveLhdXExtension:
          description: The effective x-extension of a transport unit is its extension
            in x-direction of a location under consideration of positional uncertainty
            due to previous handling by a flexible LHD which has not been closed to
            the transport unit xExtension.
          type: number
          allOf:
          - $ref: "../../lib/types/types-api.yaml#/components/schemas/LengthSimpleType"
        allocationX:
          format: int32
          description: Allocation X specifies how many storage positions a transport
            unit occupies in x direction within a location layout.
          type: integer
          example: 41
        allocationZ:
          format: int32
          description: Allocation Z specifies how many storage positions a transport
            unit occupies in z direction within a location layout.
          type: integer
          example: 3
        yExtension:
          description: "Dynamic dimension: TU extension along Y-Axis of equipment\
            \ system, usually in mm."
          type: number
          allOf:
          - $ref: "../../lib/types/types-api.yaml#/components/schemas/LengthSimpleType"
          example: 1800
        zExtension:
          description: "Dynamic dimension: TU extension along Z-Axis of equipment\
            \ system, usually in mm."
          type: number
          allOf:
          - $ref: "../../lib/types/types-api.yaml#/components/schemas/LengthSimpleType"
          example: 800
        weight:
          description: "The overall weight of a transport unit in g (grams), includes\
            \ tare weight of the base transport unit and of the good."
          type: number
          allOf:
          - $ref: "../../lib/types/types-api.yaml#/components/schemas/WeightSimpleType"
          example: 600000
        arrivalDate:
          format: date-time
          description: The timestamp for the last arrival time for a transport segment.
          type: string
          example: 2021-09-09 12:00:00.000
        contourInfo:
          description: The detailed contour info.
          type: string
          example: '..............'
        transportUnitOrientation:
          description: The direction in which the front of the transport unit is facing.
          type: string
          example: NORTH
        childTransportUnit:
          description: The child transport unit.
          type: object
          allOf:
          - $ref: "#/components/schemas/TransportUnitChildDto"
    TransportUnitId:
      description: The identifying value for a transport unit.
      type: string
      example: LU001
      x-horizon-simpletype: true
    TransportUnitLocationDurableEvent:
      description: The Transport Unit Location changed event class. Please see {@link TransportUnitLocationDto} for usage.
      x-horizon-topic-name: "${subsystem.bid}.mfc.transportunitlocationchange.devt"
      required:
        - transportUnitLocations
      type: object
      properties:
        transportUnitLocations:
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/TransportUnitLocationDto"
    TransportUnitLocationDto:
      description: Payload for a transport unit location dto event.
      type: object
      properties:
        location:
          $ref: "#/components/schemas/DetailedLocationDto"
        transportUnitId:
          $ref: "#/components/schemas/TransportUnitId"
        arrivalDate:
          format: date-time
          description: The arrival date of the transport unit.
          type: string
          example: 2022-03-10T16:15:50Z
        transportUnitOrientation:
          description: The positional orientation of the transport unit.
          type: string
          example: NORTH
    MfcModule:
      x-horizon-horizonmodule: true